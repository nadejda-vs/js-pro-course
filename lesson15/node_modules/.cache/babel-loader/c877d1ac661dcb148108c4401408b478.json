{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima and Nadeya\\\\js-pro-course\\\\lesson15\\\\src\\\\components\\\\componentslesson10\\\\PostList\\\\PostList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, memo } from 'react';\nimport { Post } from '../Post';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom'; // import { User } from './User';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { postsSaga } from '../../redux/sagas';\n\nimport { ACTIONS } from '../redux/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  // const [posts, setPosts] = useState([]);\n  const dispatch = useDispatch(); // const history = useHistory();\n  // const [user, setUser] = useState();\n\n  const posts = useSelector(state => state.postListReducer.posts);\n  console.log({\n    posts\n  });\n  const error = useSelector(state => state.postListReducer.error); // const [isModalOpened, setIsModalOpened] = useState(false);\n  // const onClickPost = (user) => {\n  // \tsetUser(user);\n  // \t// setIsModalOpened(true);\n  // };\n\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.GET_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (error) {\n      alert(error);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: posts && posts.map((item, index) => /*#__PURE__*/_jsxDEV(PostNew, {\n        // username={item.user.username}\n        title: item.title,\n        body: item.body // onClick={onClickImage}\n        ,\n        user: item.user,\n        id: item.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}, \"k4GKrIb7Rxx0QEp0EZeK6dV7U7s=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n}));\n_c2 = PostList;\n\nconst PostNew = ({\n  urlec,\n  onClick,\n  id\n}) => {\n  _s2();\n\n  const history = useHistory();\n\n  const onClickImage = () => {\n    history.push(`/posts/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    onClick: onClickImage,\n    style: {\n      width: '100px',\n      height: '100px',\n      transition: 'all 0.3s linear'\n    },\n    src: urlec\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(PostNew, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = PostNew;\nconst Container = styled.div`\n\tjustify-content: center;\n\tbackground-color: #bababa;\n\tfont-size: 45px;\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 1fr 1fr;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\tgrid-gap: 2vw;\n\tpadding: 0.5em;\n\tcolor: rgb(26, 23, 26);\n`;\n_c4 = Container;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostList$memo\");\n$RefreshReg$(_c2, \"PostList\");\n$RefreshReg$(_c3, \"PostNew\");\n$RefreshReg$(_c4, \"Container\");","map":{"version":3,"sources":["C:/Users/Dima and Nadeya/js-pro-course/lesson15/src/components/componentslesson10/PostList/PostList.jsx"],"names":["useEffect","useState","memo","Post","styled","useHistory","useDispatch","useSelector","ACTIONS","PostList","dispatch","posts","state","postListReducer","console","log","error","type","GET_POSTS_REQUEST","alert","map","item","index","title","body","user","id","PostNew","urlec","onClick","history","onClickImage","push","width","height","transition","Container","div"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,QAAQ,gBAAGP,IAAI,SAAC,MAAM;AAAA;;AAClC;AAEA,QAAMQ,QAAQ,GAAGJ,WAAW,EAA5B,CAHkC,CAIlC;AAEA;;AACA,QAAMK,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBF,KAAlC,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AAEA,QAAMK,KAAK,GAAGT,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBG,KAAlC,CAAzB,CAVkC,CAYlC;AAEA;AACA;AACA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAET,OAAO,CAACU;AAAhB,KAAD,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIgB,KAAJ,EAAW;AACVG,MAAAA,KAAK,CAACH,KAAD,CAAL;AACA;AACD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA,gBACEL,KAAK,IACLA,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,OAAD;AAEC;AACA,QAAA,KAAK,EAAED,IAAI,CAACE,KAHb;AAIC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAJZ,CAKC;AALD;AAMC,QAAA,IAAI,EAAEH,IAAI,CAACI,IANZ;AAOC,QAAA,EAAE,EAAEJ,IAAI,CAACK;AAPV,SACMJ,KADN;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CA9C2B;AAAA,UAGVhB,WAHU,EAObC,WAPa,EAUbA,WAVa;AAAA,GAArB;MAAME,Q;;AA+Cb,MAAMkB,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBH,EAAAA;AAAlB,CAAD,KAA4B;AAAA;;AAC3C,QAAMI,OAAO,GAAGzB,UAAU,EAA1B;;AAEA,QAAM0B,YAAY,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAACE,IAAR,CAAc,UAASN,EAAG,EAA1B;AACA,GAFD;;AAIA,sBACC;AACC,IAAA,OAAO,EAAEK,YADV;AAEC,IAAA,KAAK,EAAE;AACNE,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,MAAM,EAAE,OAFF;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAFR;AAOC,IAAA,GAAG,EAAEP;AAPN;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAlBD;;IAAMD,O;UACWtB,U;;;MADXsB,O;AAoBN,MAAMS,SAAS,GAAGhC,MAAM,CAACiC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,S","sourcesContent":["import { useEffect, useState, memo } from 'react';\r\nimport { Post } from '../Post';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n// import { User } from './User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { postsSaga } from '../../redux/sagas';\r\nimport { ACTIONS } from '../redux/constants';\r\n\r\nexport const PostList = memo(() => {\r\n\t// const [posts, setPosts] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\t// const history = useHistory();\r\n\r\n\t// const [user, setUser] = useState();\r\n\tconst posts = useSelector((state) => state.postListReducer.posts);\r\n\tconsole.log({ posts });\r\n\r\n\tconst error = useSelector((state) => state.postListReducer.error);\r\n\r\n\t// const [isModalOpened, setIsModalOpened] = useState(false);\r\n\r\n\t// const onClickPost = (user) => {\r\n\t// \tsetUser(user);\r\n\t// \t// setIsModalOpened(true);\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({ type: ACTIONS.GET_POSTS_REQUEST });\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (error) {\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}, [error]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ol>\r\n\t\t\t\t{posts &&\r\n\t\t\t\t\tposts.map((item, index) => (\r\n\t\t\t\t\t\t<PostNew\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t// username={item.user.username}\r\n\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\tbody={item.body}\r\n\t\t\t\t\t\t\t// onClick={onClickImage}\r\n\t\t\t\t\t\t\tuser={item.user}\r\n\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</Container>\r\n\t);\r\n});\r\nconst PostNew = ({ urlec, onClick, id }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst onClickImage = () => {\r\n\t\thistory.push(`/posts/${id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tonClick={onClickImage}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100px',\r\n\t\t\t\theight: '100px',\r\n\t\t\t\ttransition: 'all 0.3s linear',\r\n\t\t\t}}\r\n\t\t\tsrc={urlec}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Container = styled.div`\r\n\tjustify-content: center;\r\n\tbackground-color: #bababa;\r\n\tfont-size: 45px;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: 1fr 1fr 1fr;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tgrid-gap: 2vw;\r\n\tpadding: 0.5em;\r\n\tcolor: rgb(26, 23, 26);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}