{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima and Nadeya\\\\js-pro-course\\\\lesson14\\\\src\\\\components\\\\componentslesson10\\\\PostList\\\\PostList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, memo } from 'react'; // import { Post } from '../Post';\n\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom'; // import { User } from './User';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { postsSaga } from '../../redux/sagas';\n\nimport { ACTIONS } from '../redux/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  // const [posts, setPosts] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory(); // const [user, setUser] = useState();\n\n  const posts = useSelector(state => state.postListReducer.posts);\n  console.log({\n    posts\n  });\n  const error = useSelector(state => state.postListReducer.error);\n\n  const onClickPost = user => {\n    setUser(user); // setIsModalOpened(true);\n  };\n\n  useEffect(async () => {\n    dispatch({\n      type: ACTIONS.GET_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (error) {\n      alert(error);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: posts && posts.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        // username={item.user.username}\n        title: item.title,\n        body: item.body,\n        onClick: onClickPost,\n        user: item.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}, \"ZkkgPuWWcHCRo6QNGPSTp6ubHbw=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n}));\n_c2 = PostList;\n\nconst Post = ({\n  onClick,\n  id\n}) => {\n  _s2();\n\n  const history = useHistory();\n\n  const onClickPost = () => {\n    history.push(`/posts/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Post, {\n    onClick: onClickPost\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Post, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Post;\nconst Container = styled.div`\n\tjustify-content: center;\n\tbackground-color: #bababa;\n\tfont-size: 45px;\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 1fr 1fr;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\tgrid-gap: 2vw;\n\tpadding: 0.5em;\n\tcolor: rgb(26, 23, 26);\n`;\n_c4 = Container;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostList$memo\");\n$RefreshReg$(_c2, \"PostList\");\n$RefreshReg$(_c3, \"Post\");\n$RefreshReg$(_c4, \"Container\");","map":{"version":3,"sources":["C:/Users/Dima and Nadeya/js-pro-course/lesson14/src/components/componentslesson10/PostList/PostList.jsx"],"names":["useEffect","useState","memo","styled","useHistory","useParams","useDispatch","useSelector","ACTIONS","PostList","dispatch","history","posts","state","postListReducer","console","log","error","onClickPost","user","setUser","type","GET_POSTS_REQUEST","alert","map","item","index","title","body","Post","onClick","id","push","Container","div"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,QAAQ,gBAAGP,IAAI,SAAC,MAAM;AAAA;;AAClC;AAEA,QAAMQ,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B,CAJkC,CAMlC;;AACA,QAAMQ,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBF,KAAlC,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AAEA,QAAMK,KAAK,GAAGV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBG,KAAlC,CAAzB;;AAEA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACD,IAAD,CAAP,CAD6B,CAE7B;AACA,GAHD;;AAKAnB,EAAAA,SAAS,CAAC,YAAY;AACrBU,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEb,OAAO,CAACc;AAAhB,KAAD,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIiB,KAAJ,EAAW;AACVM,MAAAA,KAAK,CAACN,KAAD,CAAL;AACA;AACD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA,gBACEL,KAAK,IACLA,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,IAAD;AAEC;AACA,QAAA,KAAK,EAAED,IAAI,CAACE,KAHb;AAIC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAJZ;AAKC,QAAA,OAAO,EAAEV,WALV;AAMC,QAAA,IAAI,EAAEO,IAAI,CAACN;AANZ,SACMO,KADN;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA3C2B;AAAA,UAGVpB,WAHU,EAIXF,UAJW,EAObG,WAPa,EAUbA,WAVa;AAAA,GAArB;MAAME,Q;;AA4Cb,MAAMoB,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAqB;AAAA;;AACjC,QAAMpB,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACzBP,IAAAA,OAAO,CAACqB,IAAR,CAAc,UAASD,EAAG,EAA1B;AACA,GAFD;;AAIA,sBAAO,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEb;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CARD;;IAAMW,I;UACWzB,U;;;MADXyB,I;AAUN,MAAMI,SAAS,GAAG9B,MAAM,CAAC+B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,S","sourcesContent":["import { useEffect, useState, memo } from 'react';\r\n// import { Post } from '../Post';\r\nimport styled from 'styled-components';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n// import { User } from './User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { postsSaga } from '../../redux/sagas';\r\nimport { ACTIONS } from '../redux/constants';\r\n\r\nexport const PostList = memo(() => {\r\n\t// const [posts, setPosts] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\t// const [user, setUser] = useState();\r\n\tconst posts = useSelector((state) => state.postListReducer.posts);\r\n\tconsole.log({ posts });\r\n\r\n\tconst error = useSelector((state) => state.postListReducer.error);\r\n\r\n\tconst onClickPost = (user) => {\r\n\t\tsetUser(user);\r\n\t\t// setIsModalOpened(true);\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tdispatch({ type: ACTIONS.GET_POSTS_REQUEST });\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (error) {\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}, [error]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ol>\r\n\t\t\t\t{posts &&\r\n\t\t\t\t\tposts.map((item, index) => (\r\n\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t// username={item.user.username}\r\n\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\tbody={item.body}\r\n\t\t\t\t\t\t\tonClick={onClickPost}\r\n\t\t\t\t\t\t\tuser={item.user}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</Container>\r\n\t);\r\n});\r\nconst Post = ({ onClick, id }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst onClickPost = () => {\r\n\t\thistory.push(`/posts/${id}`);\r\n\t};\r\n\r\n\treturn <Post onClick={onClickPost} />;\r\n};\r\n\r\nconst Container = styled.div`\r\n\tjustify-content: center;\r\n\tbackground-color: #bababa;\r\n\tfont-size: 45px;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: 1fr 1fr 1fr;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tgrid-gap: 2vw;\r\n\tpadding: 0.5em;\r\n\tcolor: rgb(26, 23, 26);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}