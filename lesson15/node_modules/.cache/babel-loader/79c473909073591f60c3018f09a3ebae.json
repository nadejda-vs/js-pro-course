{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima and Nadeya\\\\js-pro-course\\\\lesson15\\\\src\\\\components\\\\componentslesson10\\\\PostList\\\\PostList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, memo } from 'react'; // import { Post } from '../Post';\n\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom'; // import { User } from './User';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { postsSaga } from '../../redux/sagas';\n\nimport { ACTIONS } from '../redux/constants';\nimport { Post } from '../../componentslesson11';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  // const [posts, setPosts] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [user, setUser] = useState();\n  const posts = useSelector(state => state.postListReducer.posts);\n  console.log({\n    posts\n  });\n  const error = useSelector(state => state.postListReducer.error); // const [isModalOpened, setIsModalOpened] = useState(false);\n\n  const onClickPost = user => {\n    setUser(user); // setIsModalOpened(true);\n  };\n\n  useEffect(async () => {\n    dispatch({\n      type: ACTIONS.GET_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (error) {\n      alert(error);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: posts && posts.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        // username={item.user.username}\n        title: item.title,\n        body: item.body // onClick={onClickImage}\n        ,\n        user: item.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}, \"G63EhscflcD2tvBUZBuWK7ll0E4=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n}));\n_c2 = PostList;\n\nconst Image = ({\n  urlec,\n  onClick,\n  id\n}) => {\n  _s2();\n\n  const history = useHistory();\n\n  const onClickImage = () => {\n    history.push(`/posts/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    onClick: onClickImage,\n    style: {\n      width: '100px',\n      height: '100px',\n      transition: 'all 0.3s linear'\n    },\n    src: urlec\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Image, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Image;\nconst Container = styled.div`\n\tjustify-content: center;\n\tbackground-color: #bababa;\n\tfont-size: 45px;\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 1fr 1fr;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\tgrid-gap: 2vw;\n\tpadding: 0.5em;\n\tcolor: rgb(26, 23, 26);\n`;\n_c4 = Container;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostList$memo\");\n$RefreshReg$(_c2, \"PostList\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Container\");","map":{"version":3,"sources":["C:/Users/Dima and Nadeya/js-pro-course/lesson15/src/components/componentslesson10/PostList/PostList.jsx"],"names":["useEffect","useState","memo","styled","useHistory","useParams","useDispatch","useSelector","ACTIONS","Post","PostList","dispatch","history","user","setUser","posts","state","postListReducer","console","log","error","onClickPost","type","GET_POSTS_REQUEST","alert","map","item","index","title","body","Image","urlec","onClick","id","onClickImage","push","width","height","transition","Container","div"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,0BAArB;;AAEA,OAAO,MAAMC,QAAQ,gBAAGR,IAAI,SAAC,MAAM;AAAA;;AAClC;AAEA,QAAMS,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AACA,QAAMc,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBF,KAAlC,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AAEA,QAAMK,KAAK,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBG,KAAlC,CAAzB,CAVkC,CAYlC;;AAEA,QAAMC,WAAW,GAAIR,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACD,IAAD,CAAP,CAD6B,CAE7B;AACA,GAHD;;AAKAb,EAAAA,SAAS,CAAC,YAAY;AACrBW,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEd,OAAO,CAACe;AAAhB,KAAD,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAGAvB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIoB,KAAJ,EAAW;AACVI,MAAAA,KAAK,CAACJ,KAAD,CAAL;AACA;AACD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA,gBACEL,KAAK,IACLA,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,IAAD;AAEC;AACA,QAAA,KAAK,EAAED,IAAI,CAACE,KAHb;AAIC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAJZ,CAKC;AALD;AAMC,QAAA,IAAI,EAAEH,IAAI,CAACb;AANZ,SACMc,KADN;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA7C2B;AAAA,UAGVrB,WAHU,EAIXF,UAJW,EAObG,WAPa,EAUbA,WAVa;AAAA,GAArB;MAAMG,Q;;AA8Cb,MAAMoB,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA4B;AAAA;;AACzC,QAAMrB,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAM8B,YAAY,GAAG,MAAM;AAC1BtB,IAAAA,OAAO,CAACuB,IAAR,CAAc,UAASF,EAAG,EAA1B;AACA,GAFD;;AAIA,sBACC;AACC,IAAA,OAAO,EAAEC,YADV;AAEC,IAAA,KAAK,EAAE;AACNE,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,MAAM,EAAE,OAFF;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAFR;AAOC,IAAA,GAAG,EAAEP;AAPN;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAlBD;;IAAMD,K;UACW1B,U;;;MADX0B,K;AAoBN,MAAMS,SAAS,GAAGpC,MAAM,CAACqC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,S","sourcesContent":["import { useEffect, useState, memo } from 'react';\r\n// import { Post } from '../Post';\r\nimport styled from 'styled-components';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n// import { User } from './User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { postsSaga } from '../../redux/sagas';\r\nimport { ACTIONS } from '../redux/constants';\r\nimport { Post } from '../../componentslesson11';\r\n\r\nexport const PostList = memo(() => {\r\n\t// const [posts, setPosts] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst [user, setUser] = useState();\r\n\tconst posts = useSelector((state) => state.postListReducer.posts);\r\n\tconsole.log({ posts });\r\n\r\n\tconst error = useSelector((state) => state.postListReducer.error);\r\n\r\n\t// const [isModalOpened, setIsModalOpened] = useState(false);\r\n\r\n\tconst onClickPost = (user) => {\r\n\t\tsetUser(user);\r\n\t\t// setIsModalOpened(true);\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tdispatch({ type: ACTIONS.GET_POSTS_REQUEST });\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (error) {\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}, [error]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ol>\r\n\t\t\t\t{posts &&\r\n\t\t\t\t\tposts.map((item, index) => (\r\n\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t// username={item.user.username}\r\n\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\tbody={item.body}\r\n\t\t\t\t\t\t\t// onClick={onClickImage}\r\n\t\t\t\t\t\t\tuser={item.user}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</Container>\r\n\t);\r\n});\r\nconst Image = ({ urlec, onClick, id }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst onClickImage = () => {\r\n\t\thistory.push(`/posts/${id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tonClick={onClickImage}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100px',\r\n\t\t\t\theight: '100px',\r\n\t\t\t\ttransition: 'all 0.3s linear',\r\n\t\t\t}}\r\n\t\t\tsrc={urlec}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Container = styled.div`\r\n\tjustify-content: center;\r\n\tbackground-color: #bababa;\r\n\tfont-size: 45px;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: 1fr 1fr 1fr;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tgrid-gap: 2vw;\r\n\tpadding: 0.5em;\r\n\tcolor: rgb(26, 23, 26);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}