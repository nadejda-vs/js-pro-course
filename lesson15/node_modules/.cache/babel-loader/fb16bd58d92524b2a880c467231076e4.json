{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima and Nadeya\\\\js-pro-course\\\\lesson14\\\\src\\\\components\\\\componentslesson10\\\\PostList\\\\PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, memo } from 'react';\nimport { Post } from '../Post';\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom'; // import { User } from './User';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { postsSaga } from '../../redux/sagas';\n\nimport { ACTIONS } from '../redux/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  // const [posts, setPosts] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory(); // const [user, setUser] = useState();\n\n  const posts = useSelector(state => state.postListReducer.posts);\n  console.log({\n    posts\n  });\n  const error = useSelector(state => state.postListReducer.error); // const onClickPost = (user) => {\n  // \tsetUser(user);\n  // \tsetIsModalOpened(true);\n  // };\n\n  useEffect(async () => {\n    dispatch({\n      type: ACTIONS.GET_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (error) {\n      alert(error);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: posts && posts.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        // username={item.user.username}\n        title: item.title,\n        body: item.body,\n        onClick: onClickPost,\n        user: item.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}, \"ZkkgPuWWcHCRo6QNGPSTp6ubHbw=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n})); // const PostOne = ({ onClick, id }) => {\n// \tconst history = useHistory();\n// \tconst onClickPost = () => {\n// \t\thistory.push(`/posts/${id}`);\n// \t};\n// \treturn <Post onClick={onClickPost} />;\n// };\n\n_c2 = PostList;\nconst Container = styled.div`\n\tjustify-content: center;\n\tbackground-color: #bababa;\n\tfont-size: 45px;\n\ttext-align: center;\n\tjustify-content: center;\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 1fr 1fr;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\tgrid-gap: 2vw;\n\tpadding: 0.5em;\n\tcolor: rgb(26, 23, 26);\n`;\n_c3 = Container;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PostList$memo\");\n$RefreshReg$(_c2, \"PostList\");\n$RefreshReg$(_c3, \"Container\");","map":{"version":3,"sources":["C:/Users/Dima and Nadeya/js-pro-course/lesson14/src/components/componentslesson10/PostList/PostList.jsx"],"names":["useEffect","useState","memo","Post","styled","useHistory","useParams","useDispatch","useSelector","ACTIONS","PostList","dispatch","history","posts","state","postListReducer","console","log","error","type","GET_POSTS_REQUEST","alert","map","item","index","title","body","onClickPost","user","Container","div"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,QAAQ,gBAAGR,IAAI,SAAC,MAAM;AAAA;;AAClC;AAEA,QAAMS,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B,CAJkC,CAMlC;;AACA,QAAMQ,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBF,KAAlC,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AAEA,QAAMK,KAAK,GAAGV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,eAAN,CAAsBG,KAAlC,CAAzB,CAVkC,CAYlC;AACA;AACA;AACA;;AAEAlB,EAAAA,SAAS,CAAC,YAAY;AACrBW,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEV,OAAO,CAACW;AAAhB,KAAD,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAGApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,KAAJ,EAAW;AACVG,MAAAA,KAAK,CAACH,KAAD,CAAL;AACA;AACD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA,gBACEL,KAAK,IACLA,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,IAAD;AAEC;AACA,QAAA,KAAK,EAAED,IAAI,CAACE,KAHb;AAIC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAJZ;AAKC,QAAA,OAAO,EAAEC,WALV;AAMC,QAAA,IAAI,EAAEJ,IAAI,CAACK;AANZ,SACMJ,KADN;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA3C2B;AAAA,UAGVjB,WAHU,EAIXF,UAJW,EAObG,WAPa,EAUbA,WAVa;AAAA,GAArB,C,CA4CP;AACA;AAEA;AACA;AACA;AAEA;AACA;;MApDaE,Q;AAsDb,MAAMmB,SAAS,GAAGzB,MAAM,CAAC0B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,S","sourcesContent":["import { useEffect, useState, memo } from 'react';\r\nimport { Post } from '../Post';\r\nimport styled from 'styled-components';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n// import { User } from './User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { postsSaga } from '../../redux/sagas';\r\nimport { ACTIONS } from '../redux/constants';\r\n\r\nexport const PostList = memo(() => {\r\n\t// const [posts, setPosts] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\t// const [user, setUser] = useState();\r\n\tconst posts = useSelector((state) => state.postListReducer.posts);\r\n\tconsole.log({ posts });\r\n\r\n\tconst error = useSelector((state) => state.postListReducer.error);\r\n\r\n\t// const onClickPost = (user) => {\r\n\t// \tsetUser(user);\r\n\t// \tsetIsModalOpened(true);\r\n\t// };\r\n\r\n\tuseEffect(async () => {\r\n\t\tdispatch({ type: ACTIONS.GET_POSTS_REQUEST });\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (error) {\r\n\t\t\talert(error);\r\n\t\t}\r\n\t}, [error]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ol>\r\n\t\t\t\t{posts &&\r\n\t\t\t\t\tposts.map((item, index) => (\r\n\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t// username={item.user.username}\r\n\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\tbody={item.body}\r\n\t\t\t\t\t\t\tonClick={onClickPost}\r\n\t\t\t\t\t\t\tuser={item.user}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</Container>\r\n\t);\r\n});\r\n// const PostOne = ({ onClick, id }) => {\r\n// \tconst history = useHistory();\r\n\r\n// \tconst onClickPost = () => {\r\n// \t\thistory.push(`/posts/${id}`);\r\n// \t};\r\n\r\n// \treturn <Post onClick={onClickPost} />;\r\n// };\r\n\r\nconst Container = styled.div`\r\n\tjustify-content: center;\r\n\tbackground-color: #bababa;\r\n\tfont-size: 45px;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\tdisplay: grid;\r\n\tgrid-template-rows: 1fr 1fr 1fr;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\tgrid-gap: 2vw;\r\n\tpadding: 0.5em;\r\n\tcolor: rgb(26, 23, 26);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}